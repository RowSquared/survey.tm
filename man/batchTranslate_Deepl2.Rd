% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deepl.R
\name{batchTranslate_Deepl2}
\alias{batchTranslate_Deepl2}
\title{Batch Translate Text Items Using DeepL}
\usage{
batchTranslate_Deepl2(
  tdb = list(),
  target_languages = NULL,
  source_lang = "English",
  API_key = NULL
)
}
\arguments{
\item{tdb}{List of translations as returned by \code{\link[=get_tdb_data]{get_tdb_data()}} or \code{\link[=update_tdbs]{update_tdbs()}}. This list should contain data tables with text items to be translated.}

\item{target_languages}{Languages to be queried for translation. By default, the function uses the names of the data tables in \code{tdb} as the target languages. If specified, it should be a vector of language names or codes that are supported by DeepL.}

\item{source_lang}{Source language, indicating the language in which the questionnaire or text items were originally designed. The default is 'English'. It's important to specify this accurately to ensure correct translations.}

\item{API_key}{Authentication Key for the DeepL API. Ensure that this key is valid for the free account of DeepL if using functions specific to that account type. For information on obtaining an API key, visit \href{https://www.deepl.com/en/pro-api?utm_campaign=Google_EMEA_EN_Search_B_Brand_Conversion&utm_term=deepl\%20api\%20key&utm_source=adwords&utm_medium=ppc&gad_source=1}{DeepL API}.}
}
\value{
Returns a modified list of data tables (\code{tdb}) where the text items have been translated as per the specified target languages. Each data table in the list will have updated translations where previously missing.
}
\description{
This function serves as a wrapper for specific functions from the \code{deeplr} package,
utilizing the "2" functions (like \code{translate2}) which are compatible with the free account of DeepL.
}
\details{
It processes a list of data tables, each representing a set of translations, and queries the DeepL API for translations of text items that are missing (NA) in column 'Translation'.
The function is designed to handle multiple languages and can process each data table in the list according to the specified target languages.
}
\examples{
\dontrun{
# Example usage (assuming 'tdb' is a predefined list of data tables and 'API_key' is set):
translated_tdb <- batchTranslate_Deepl2(tdb, target_languages = c("German", "French"), API_key = my_api_key)
}
}
\seealso{
\code{translate2} in the \code{deeplr} package for details on the underlying translation function.
\code{get_tdb_data()} and \code{update_tdbs()} for functions generating the input list of data tables.
}
